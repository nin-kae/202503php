version: "3.8"

services:
  # --------------------------
  # Nginx 服务器
  # --------------------------
  nginx:
    image: nginx:latest                # 使用最新的官方 Nginx 镜像
    container_name: nginx              # 指定容器名称
    restart: always                    # 确保 Nginx 自动重启
    ports:
      - "80:80"                        # 绑定本机 80 端口到容器的 80 端口
    volumes:
      - "${PROJECT_ROOT}:/var/www/html"                      # 挂载整个 php 目录，支持多个项目
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf  # 挂载 Nginx 配置
      - "${LOGS_ROOT}/nginx:/var/log/nginx"                  # 挂载日志目录
    depends_on:
      - php                            # 依赖 PHP 容器，确保 PHP 先启动
    networks:
      - app_network                    # 连接到自定义网络

  # --------------------------
  # PHP-FPM 服务器（带 Composer 和扩展）
  # --------------------------
  php:
    build: ./php                       # 使用自定义 Dockerfile 构建 PHP 容器
    container_name: php
    restart: always                    # 确保 PHP 自动重启
    volumes:
      - "${PROJECT_ROOT}:/var/www/html"                       # 让 PHP 访问所有项目
      - "${LOGS_ROOT}/php:/var/log/php"                       # 记录 PHP 运行日志
      - ./php/php.ini:/usr/local/etc/php/conf.d/custom-php.ini  # 额外加载本地 php.ini 配置
    networks:
      - app_network

  # --------------------------
  # MySQL 数据库
  # --------------------------
  mysql:
    image: mysql:8.0                   # 使用 MySQL 8.0 镜像
    container_name: mysql
    restart: always                    # 如果容器崩溃，自动重启
    environment:
      MYSQL_ROOT_PASSWORD: root        # 设置 MySQL root 用户密码
      MYSQL_DATABASE: mydatabase       # 默认数据库
      MYSQL_USER: user                 # 创建的普通用户
      MYSQL_PASSWORD: password         # 普通用户密码
    ports:
      - "3306:3306"                    # 绑定 MySQL 端口
    volumes:
      - mysql_data:/var/lib/mysql      # 使用命名卷存储 MySQL 数据
      - "${LOGS_ROOT}/mysql:/var/log/mysql"                  # 记录 MySQL 日志
    networks:
      - app_network

# --------------------------
# 定义自定义网络
# --------------------------
networks:
  app_network:

# --------------------------
# 使用命名卷存储 MySQL 数据，避免权限问题
# --------------------------
volumes:
  mysql_data: